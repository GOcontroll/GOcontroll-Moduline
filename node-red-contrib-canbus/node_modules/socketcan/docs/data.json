{
    "project": {},
    "files": {
        "socketcan.js": {
            "name": "socketcan.js",
            "modules": {
                "Signals": 1
            },
            "classes": {
                "Signal": 1,
                "Message": 1,
                "DatabaseService": 1
            },
            "fors": {
                "exports": 1,
                "Signal": 1,
                "DatabaseService": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "Signals": {
            "name": "Signals",
            "submodules": {},
            "elements": {},
            "classes": {
                "exports": 1,
                "Signal": 1,
                "Message": 1,
                "DatabaseService": 1
            },
            "fors": {
                "Signal": 1,
                "DatabaseService": 1,
                "exports": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "socketcan.js",
            "line": 203,
            "description": "The Signals modules provides an interface to access the values/signals\nencoded in CAN messages."
        }
    },
    "classes": {
        "exports": {
            "name": "exports",
            "shortname": "exports",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Signals"
        },
        "Signal": {
            "name": "Signal",
            "shortname": "Signal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Signals",
            "namespace": "",
            "file": "socketcan.js",
            "line": 47,
            "description": "The actual signal."
        },
        "Message": {
            "name": "Message",
            "shortname": "Message",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Signals",
            "namespace": "",
            "file": "socketcan.js",
            "line": 134,
            "description": "Just a container to keep the Signals."
        },
        "DatabaseService": {
            "name": "DatabaseService",
            "shortname": "DatabaseService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Signals",
            "namespace": "",
            "file": "socketcan.js",
            "line": 203,
            "description": "A DatabaseService is usually generated once per bus to collect signals\ncoded in the CAN messages according a DB description.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "channel",
                    "description": "RAW channel"
                },
                {
                    "name": "db_desc",
                    "description": "Set of rules to decode/encode signals (@parse_kcd.js)"
                }
            ],
            "return": {
                "description": "a new DatabaseService"
            }
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "socketcan.js",
            "line": 28,
            "itemtype": "method",
            "name": "createRawChannel",
            "params": [
                {
                    "name": "channel",
                    "description": "Channel name (e.g. vcan0)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a new channel object or exception",
                "type": "RawChannel"
            },
            "class": "exports"
        },
        {
            "file": "socketcan.js",
            "line": 53,
            "description": "Symbolic name",
            "itemtype": "attribute",
            "name": "name",
            "final": 1,
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 74,
            "description": "Label set for defined states of the signal.",
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 79,
            "description": "this will allow triggering on mux'ed message ids.",
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 84,
            "description": "Current value",
            "itemtype": "attribute",
            "name": "value",
            "final": 1,
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 95,
            "description": "Keep track of listeners who want to be notified if this signal changes",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "listener",
                    "description": "JS callback to get notification"
                }
            ],
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 105,
            "description": "Set new value of this signal. Any local registered clients will\nreceive a notification. Please note, no CAN message is actually\nsend to the bus (@see DatabaseServer::send)",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "newValue",
                    "description": "New value to set",
                    "type": "Bool|double|integer"
                }
            ],
            "class": "Signal",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 140,
            "description": "CAN identifier",
            "itemtype": "attribute",
            "name": "id",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 147,
            "description": "Extended Frame Format used",
            "itemtype": "attribute",
            "name": "ext",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 154,
            "description": "Symbolic name",
            "itemtype": "attribute",
            "name": "name",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 161,
            "description": "Length in bytes of resulting CAN message",
            "itemtype": "attribute",
            "name": "len",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 169,
            "description": "This is the time frame that the message gets generated",
            "itemtype": "attribute",
            "name": "interval",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 177,
            "description": "This is tells us the message is mutliplexed.",
            "itemtype": "attribute",
            "name": "muxed",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 185,
            "description": "Named array of signals within this message. Accessible via index and name.",
            "itemtype": "attribute",
            "name": "signals",
            "type": "Signal",
            "final": 1,
            "class": "Message",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 216,
            "description": "Named array of known messages. Accessible via index and name.",
            "itemtype": "attribute",
            "name": "messages",
            "type": "Message",
            "class": "DatabaseService",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 279,
            "description": "Construct a CAN message and encode all related signals according\nthe rules. Finally send the message to the bus.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "msg_name",
                    "description": "Name of the message to generate"
                }
            ],
            "class": "DatabaseService",
            "module": "Signals"
        },
        {
            "file": "socketcan.js",
            "line": 343,
            "itemtype": "method",
            "name": "parseNetworkDescription",
            "params": [
                {
                    "name": "file",
                    "description": "Path to KCD file to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "DB description to be used in DatabaseService"
            },
            "class": "exports",
            "module": "Signals"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nLabel set for defined states of the signal.",
            "line": " socketcan.js:74"
        },
        {
            "message": "Missing item type\nthis will allow triggering on mux'ed message ids.",
            "line": " socketcan.js:79"
        }
    ]
}